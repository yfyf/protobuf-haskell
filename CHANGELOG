CHANGELOG
---------

Whats up with version 2.0.7 ?

Version 2.0.5 and 2.0.6 had compile problems with GHC 7.4, this is now warning-free (as free as possible).

The lack of a package name caused problems.  Hopefully the new handling works for everyone.

What is new in 1.8.0 ?

Submitted bug fixes!
Fix for compiling generated haskell that uses packed fields.
Fix to mangling default value Enum names.
Fix for using "group" when in plug-in mode.

I also changed the directory layout for the source code of protocol-buffers-descriptor.  The
auto-generated code is now in "src-auto-generated" and the API for accessing options is under
"src-hand-written".  I also added a README file to the descriptor package explaining the commands to
recreate src-auto-generated.

What is new in 1.7.0 ?

This version adds a patch from George van den Driessche to allow hprotoc to work as a plug-in to
protoc.  You must copy the hprotoc to be named protoc-gen-haskell (not a symlink) and call it as:

/opt/protobuf-2.3.0/bin/protoc --plugin=./protoc-gen-haskell --haskell_out=DirOut test.proto

What is new in 1.6.0 ?

This version is now caught up with the official protobuf-2.3.0 release.
 The highlights of the changes are (cribbing from Kenton's announcement):

>   General
>   * Parsers for repeated numeric fields now always accept both packed and
>     unpacked input.  The [packed=true] option only affects serializers.
>     Therefore, it is possible to switch a field to packed format without
>     breaking backwards-compatibility -- as long as all parties are using
>     protobuf 2.3.0 or above, at least.
and
>   * inf, -inf, and nan can now be used as default values for float and double
>     fields.
have been added to 1.6.0.

I did not add support for plugin code generators or for writing directly
to a compressed zip or jar file.  No service related code is ever
generated so the "option *_generic_services" changes were ignored.


What is new in 1.5.0 ?

  The "packed" repeated fields should work on the wire, "deprecated" fields are parsed properly but
  not nothing is otherwise done about this flag.  The parser should disambiguate references to
  messages/groups/enums by ignoring fields with the same name (for types of normal fields and
  extension fields).  The Lexar has had a few fixes courtesy of George van den Driessche (newlines
  after numeric literals in proto files should now be handled).


Older changes
-------------

2008-09 : version 0.3.1 released.  This is the second release

  * Change Parser.hs to allow negative enum values to match actual behavior of protoc.
  * Use runST & castSTUArray for both Float and Double conversion to Word32 and Word64.
  * Adding UnknownField support controlled by "-u" flag to hprotoc.
  * Fix messageGet to use the new 'isReallyEmpty' and Parial Results get Nothing, to work better.
  * Fix default instances of Descriptor messages to be Nothing instead of Just defaultValue.

2008-09 : version 0.2.9 released.  This is the first working release.
